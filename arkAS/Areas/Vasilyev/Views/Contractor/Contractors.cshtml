@using arkAS.BLL

@{
    ViewBag.Title = "Работа с контрагентами";
    var js = new System.Web.Script.Serialization.JavaScriptSerializer();
}

@Styles.Render("~/content/Cabinet.css")

@*<ul class="nav nav-tabs">
    <li role="presentation">@Html.ActionLink("Документы", "Documents", "Document")</li>
    <li role="presentation">@Html.ActionLink("Счета", "Invoices", "Invoice")</li>
    <li role="presentation">@Html.ActionLink("Почта", "Mails", "Mail")</li>
    <li role="presentation" class="active">@Html.ActionLink("Контрагенты", "Contractors", "Contractor")</li>
</ul>*@

<div class="contrCont"></div>

@section js{
    <script type="text/javascript">

        var ascont = {
            init: function () {
                ascont.initMainTable();
                $(document).delegate('.usCreateCont', 'click', function (e) {
                    e.preventDefault();
                    ascont.createItem();
                });
            },
            initMainTable: function () {
                as.crud.init({
                    cont: $('.contrCont'),
                    title: 'Работа с контрагентами',
                    toolbarAdditional: '<a href="#" class="btn btn-primary usCreateCont">Создать</a>',
                    groupOperationsToolbar: '',
                    ajaxURLFormat: '/Vasilyev/Contractor/Contractors_{0}',
                    inlineAjaxURL: "/Vasilyev/Contractor/ContractorsInLine",
                    pageSize: 15,
                    cookiePrefix: "as-crud-ContsDict-",
                    emptyText: 'Нет элементов',
                    createLinkTitle: 'Создать контрагента',
                    filterLinkTitle: 'Найти',
                    filterTitle: 'Фильтрация данных',
                    showChecksCol: false,
                    showNumsCol: true,
                    showToolbar: true,
                    showColSettings: false,
                    showReplaceTool: false,
                    showExcelExport: false,
                    additionalSort: false,
                    cols: [
                    { code: "id", title: "ID", tooltip: "Идентификатор", isVisible: false, isPK: true, datatype: "int", isRequired: false, editHide: true },
                    { code: "name", title: "Имя", tooltip: "Имя контрагента", isVisible: true, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: true, callback: null, editable: { type: "text", format: "{0}", callback: function (el, newValue) { } } },
                    { code: "code", title: "Код", tooltip: "Код документа", isVisible: false, isPK: false, datatype: "string", isRequired: true, format: "{0}", isSort: true, callback: null }
                    ],
                    operations: {
                        create: false,
                        remove: true,
                        edit: false,
                        other: []
                    },
                    getFilterMakeup: function (filter) {
                        var s = [];
                        s.push("<div class='crdFilterItem'><span class='gCap'>Имя контрагента</span><input type='text' class='contName' value='" + (filter.name || '') + "' /></div>");
                        return s.join("");
                    },
                    filter: function () {
                        var filter = {
                            name: $('.contName').val() || "",
                        };
                        return filter;
                    },
                });
            },
            createItem: function () {
                var s = [];
                s.push("<span>Имя контрагента</span><input type='text' class='form-control newContName' /><br />");

                setTimeout(function () { $('.newContractor').focus(); }, 200);
                as.sys.showDialog("Создание контрагента", s.join(""), "Сохранить", function () {
                    var name = $('.newContName').val();
                    if (!name) {
                        as.sys.bootstrapAlert("Укажите пожалуйста название", { type: 'warning' });
                        $('.newContName').focus();
                        return;
                    }
                    var params = {
                        name: name,
                    };
                    as.sys.ajaxSend("/Vasilyev/Contractor/CreateContractor", params, function (data) {
                        if (typeof (data) != "object") data = eval('(' + data + ')');
                        if (data.result) {
                            as.sys.bootstrapAlert("Элемент сохранен", { type: 'success' });
                            as.sys.closeDialog();
                            as.crud.getItems();
                            setTimeout(function () {
                                as.crud.gotoItem(data.itemID);
                            }, 1000);
                        } else {
                            as.sys.bootstrapAlert(data.msg || "Возникли ошибки при выполнении операции!", { type: 'danger' });
                        }
                    });
                });
            },
        }
        $(function () {
            ascont.init();
        });

    </script>
}
